name: linuxserver-openssh-server
services:
  app:
    image: linuxserver/openssh-server:version-10.0_p1-r9
    restart: unless-stopped
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      PUBLIC_KEY: ''
      PUBLIC_KEY_FILE: ''
      PUBLIC_KEY_DIR: ''
      PUBLIC_KEY_URL: ''
      SUDO_ACCESS: ''
      PASSWORD_ACCESS: ''
      USER_PASSWORD: ''
      USER_PASSWORD_FILE: ''
      USER_NAME: ''
      LOG_STDOUT: ''
    x-casaos:
      envs:
        - container: PUID
          description:
            en_us: Run 'id [USER]' for the owner of the host volume directories to get the UID to use here.
        - container: PGID
          description:
            en_us: Run 'id [USER]' for the owner of the host volume directories to get the GID to use here.
        - container: TZ
          description:
            en_us: specify a timezone to use, see this list.
        - container: PUBLIC_KEY
          description:
            en_us: Optional ssh public key, which will automatically be added to authorized_keys. [OPTIONAL]
        - container: PUBLIC_KEY_FILE
          description:
            en_us: Optionally specify a file containing the public key (works with docker secrets). [OPTIONAL]
        - container: PUBLIC_KEY_DIR
          description:
            en_us: Optionally specify a directory containing the public keys (works with docker secrets). [OPTIONAL]
        - container: PUBLIC_KEY_URL
          description:
            en_us: Optionally specify a URL containing the public key. [OPTIONAL]
        - container: SUDO_ACCESS
          description:
            en_us: Set to true to allow linuxserver.io, the ssh user, sudo access. Without USER_PASSWORD set, this will allow passwordless sudo access. [OPTIONAL]
        - container: PASSWORD_ACCESS
          description:
            en_us: Set to true to allow user/password ssh access. You will want to set USER_PASSWORD or USER_PASSWORD_FILE as well. [OPTIONAL]
        - container: USER_PASSWORD
          description:
            en_us: Optionally set a sudo password for linuxserver.io, the ssh user. If this or USER_PASSWORD_FILE are not set but SUDO_ACCESS is set to true, the user will have passwordless sudo access. [OPTIONAL]
        - container: USER_PASSWORD_FILE
          description:
            en_us: Optionally specify a file that contains the password. This setting supersedes the USER_PASSWORD option (works with docker secrets). [OPTIONAL]
        - container: USER_NAME
          description:
            en_us: Optionally specify a user name (Default:linuxserver.io) [OPTIONAL]
        - container: LOG_STDOUT
          description:
            en_us: Set to true to log to stdout instead of file. [OPTIONAL]
    ports:
      - target: 2222
        published: 2222
        protocol: tcp
    volumes:
      - type: bind
        source: /srv/lsio/openssh-server/config
        target: /config
x-casaos:
  architectures:
    - amd64
    - arm64
  main: app
  description:
    en_us: Openssh-server is a sandboxed environment that allows ssh access without giving keys to the entire server. Giving ssh access via private key often means giving full access to the server. This container creates a limited and sandboxed environment that others can ssh into. The users only have access to the folders mapped and the processes running inside this container.
  tagline:
    en_us: A sandboxed environment that allows ssh access without giving keys to the entire server. Giving ssh access via private key often means giving full access to the server. This container creates a limited and sandboxed environment that others can ssh into. The users only have access to the folders mapped and the processes running inside this container.
  developer: LinuxServer.io
  author: WisdomSky
  icon: https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openssh-server-logo.png
  thumbnail: https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openssh-server-logo.png
  title:
    en_us: Openssh server
  category: LinuxServer.io
